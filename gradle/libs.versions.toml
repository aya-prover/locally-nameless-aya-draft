[versions]
# The Version of this project, aka, The Aya Theorem Prover.
# Remove "-SNAPSHOT" suffix and run gradle publish to release a new version.
# After that, increase the version number and add "-SNAPSHOT" suffix back for next cycle.
project = "0.30.0-SNAPSHOT"

# https://openjdk.org/
java = "21"

# https://github.com/JetBrains/java-annotations
annotations = "24.1.0"
kala = "0.72.0"
# https://picocli.info
picocli = "4.7.6"
build-util = "0.0.22"
# https://github.com/graalvm/native-build-tools
graal-tools = "0.10.1"
# https://github.com/jline/jline3
jline = "3.26.1"
# https://github.com/commonmark/commonmark-java
commonmark = "0.22.0"
# https://junit.org/junit5
junit = "5.10.0"
hamcrest = "2.2"
# https://github.com/google/gson
gson = "2.10.1"
# https://github.com/beryx/badass-jlink-plugin
jlink = "3.0.1"
# https://github.com/jacoco/jacoco
jacoco = "0.8.12"
# https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-delegation
manifold = "2024.1.14"

[plugins]
jlink = { id = "org.beryx.jlink", version.ref = "jlink" }

[libraries]
annotations = { group = "org.jetbrains", name = "annotations", version.ref = "annotations" }

aya-ij-core = { group = "org.aya-prover.upstream", name = "ij-parsing-core", version.ref = "build-util" }
aya-ij-text = { group = "org.aya-prover.upstream", name = "ij-util-text", version.ref = "build-util" }
aya-ij-wrapper = { group = "org.aya-prover.upstream", name = "ij-parsing-wrapper", version.ref = "build-util" }
aya-lsp-protocol = { group = "org.aya-prover.upstream", name = "javacs-protocol", version.ref = "build-util" }
aya-build-util = { group = "org.aya-prover.upstream", name = "build-util", version.ref = "build-util" }
aya-build-jflex = { group = "org.aya-prover.upstream", name = "build-util-jflex", version.ref = "build-util" }

kala-base = { group = "org.glavo.kala", name = "kala-base", version.ref = "kala" }
kala-collection = { group = "org.glavo.kala", name = "kala-collection", version.ref = "kala" }
kala-common = { group = "org.glavo.kala", name = "kala-common", version.ref = "kala" }

picocli-runtime = { group = "info.picocli", name = "picocli", version.ref = "picocli" }
picocli-codegen = { group = "info.picocli", name = "picocli-codegen", version.ref = "picocli" }

graal-nitools = { group = "org.graalvm.buildtools.native", name = "org.graalvm.buildtools.native.gradle.plugin", version.ref = "graal-tools" }

jline-terminal-jansi = { group = "org.jline", name = "jline-terminal-jansi", version.ref = "jline" }
jline-terminal-api = { group = "org.jline", name = "jline-terminal", version.ref = "jline" }
jline-builtins = { group = "org.jline", name = "jline-builtins", version.ref = "jline" }
jline-reader = { group = "org.jline", name = "jline-reader", version.ref = "jline" }

junit-jupiter = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junit" }
junit-params = { group = "org.junit.jupiter", name = "junit-jupiter-params", version.ref = "junit" }
hamcrest = { group = "org.hamcrest", name = "hamcrest", version.ref = "hamcrest" }

gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }
commonmark = { group = "org.commonmark", name = "commonmark", version.ref = "commonmark" }

manifold-delegate-runtime = { group = "systems.manifold", name = "manifold-delegation-rt", version.ref = "manifold" }
manifold-delegate-codegen = { group = "systems.manifold", name = "manifold-delegation", version.ref = "manifold" }
